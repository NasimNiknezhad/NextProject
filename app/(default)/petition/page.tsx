import type { Metadata } from 'next';
import prisma from '@/prisma/db';
import classes from './petition.module.css';
import Link from 'next/link';
import Image from 'next/image';
import saveTheWhales from '@/img/save-the-whales.jpg';
import PendingSignatures from '@/components/Petition/PendingSignatures';
import PetitionForm from '@/components/Petition/PetitionForm';

/* Pages erhalten automatisch searchParams als Prop */
type Props = {
  searchParams: {
    page?: string;
    perPage?: string;
  };
};

const defaultPerPage = 1;

export const metadata: Metadata = {
  title: 'üê≥ Rettet die Wale - Jetzt unterschreiben!',
};

export default async function PetitionPage({
  searchParams: { page = '', perPage = '' },
}: Props) {
  /* Setzt eine Pagination um. Standardm√§√üig sollen z.B. nur die ersten 2
	Unterschriften angezeigt werden. Aber √ºber den Search-Parameter page
	soll die Seite konfigurierbar sein, mit dem Parameter perPage soll man
	angeben k√∂nnen, dass mehr Unterschriften pro Seite sichtbar sind.
	Versucht m√∂glichst, ung√ºltige oder extreme Werte f√ºr page und perPage
	zu vermeiden. 
	*/

  const perPageNumber = Math.max(
    Math.min(parseInt(perPage) || defaultPerPage, 100),
    1
  );

  /* Nutzt die Methode count von prisma, um die Anzahl der approved
	Unterschriften in die Variable totalSignatures zu speichern. */
  const totalSignatures = await prisma.signature.count({
    where: {
      approved: true,
    },
  });

  const totalPageCount = Math.ceil(totalSignatures / perPageNumber);

  let pageNumber = Math.max(parseInt(page) || 1, 1);
  if (pageNumber > totalPageCount) {
    pageNumber = 1;
  }

  /* Die Ergebnisse sollen in anderer Reihenfolge aus der Datenbank kommen, √§lteste
Unterschriften zuerst. */
  const signatures = await prisma.signature.findMany({
    where: {
      approved: true,
    },
    take: perPageNumber,
    skip: (pageNumber - 1) * perPageNumber,
    orderBy: {
      date: 'asc',
    },
  });

  const perPageParam =
    perPageNumber !== defaultPerPage ? `&perPage=${perPageNumber}` : '';

  return (
    <>
      <h1 className={classes.heading}>Rettet die Wale!</h1>

      {/* Ein Bild mit Hilfe der Next Image-Komponente hier erstellen, mit den korrekten
Attributen, z.B. korrekte sizes-Angabe */}
      <Image
        src={saveTheWhales}
        alt="Save the Whales von Friedensreich Hundertwasser"
        className={classes.image}
        sizes="(width < 32rem) 90vw, 30rem"
        placeholder="blur"
      />

      <p className={classes.intro}>
        {/* Bittet eine KI, euch einen Text mit 100 W√∂rtern zu generieren, der zum Thema
passt. */}
        Wir m√ºssen dringend handeln, um die Wale zu retten! Diese majest√§tischen
        Kreaturen sind durch menschliche Aktivit√§ten stark bedroht.
        √úberfischung, Verschmutzung der Meere und der Klimawandel setzen ihnen
        zu. Wale spielen eine entscheidende Rolle im √ñkosystem unserer Ozeane.
        Sie helfen bei der Regulierung des Klimas und unterst√ºtzen die Vielfalt
        des Lebens im Meer. Ohne sie w√ºrde das Gleichgewicht der
        Meereslebensr√§ume gest√∂rt. Lasst uns zusammenstehen und die Wale
        sch√ºtzen. Unterzeichnen Sie diese Petition, um Regierungen und
        Organisationen weltweit aufzufordern, Ma√ünahmen zum Schutz der Wale zu
        ergreifen. Jede Stimme z√§hlt. Rettet die Wale!
      </p>
      <strong>Schon {totalSignatures} haben unterschrieben!</strong>

      {/* Nutzt das start-Attribut von ol, um die korrekten Nummern anzuzeigen.
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol
*/}
      <ol className={classes.list} start={(pageNumber - 1) * perPageNumber + 1}>
        {signatures.map(({ name, date, id }) => (
          <li key={id}>
            {name || 'Freund*in der Wale'} (
            <time dateTime={date.toISOString().substring(0, 10)}>
              {date.toLocaleDateString('de')}
            </time>
            )
          </li>
        ))}
      </ol>
      {/* 
			F√ºgt hier zwei Next-Link-Komponenten ein, mit denen man auf die jeweils n√§chste
			Seite navigieren kann. Der Link "Weitere" bzw. "Vorige Unterschriften" soll nur
			sichtbar sein, wenn es weitere bzw. vorige Unterschriten gibt. 
			*/}
      {totalPageCount > 1 && (
        <nav className={classes.pagination} aria-label="Pagination">
          {pageNumber > 1 && (
            <Link
              href={`/petition?page=${pageNumber - 1}${perPageParam}`}
              scroll={false}
            >
              Vorige Unterschriften
            </Link>
          )}
          {pageNumber < totalPageCount && (
            <Link
              href={`/petition?page=${pageNumber + 1}${perPageParam}`}
              scroll={false}
            >
              N√§chste Unterschriften
            </Link>
          )}
        </nav>
      )}
      <PetitionForm />
      <PendingSignatures />
    </>
  );
}
